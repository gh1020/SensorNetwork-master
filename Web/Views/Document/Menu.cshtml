@using SensorNetwork.Data.Models;
@model SensorNetwork.Data.Models.UserInterface
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>菜单导航</title>
    <link href="~/Content/Document/LeftMenu.css" rel="stylesheet" />
    <style type="text/css">
        * {
            font-family: '细圆';
            margin: 0;
        }

        a {
            text-decoration: none;
        }

        h5 {
            color: gray;
        }

        .arrow {
            width: 20px;
            height: 20px;
            float: right;
            margin-right: 10px;
            margin-top: 8px;
            vertical-align: middle;
            position: relative;
        }

        #Content-right fieldset {
            font-size: 14px;
            color: #636060;
        }
    </style>
</head>
<body id="bg">
    <div id="Content-left">
        <div class="list">
            <ul class="yiji">
                <li style="background-color:#467ca2;"><a href="javascript: void(0)" class="inactive" style="color:white;" onclick="showAtRight('/Document/Main')">简介</a></li>
                <li>
                    <a href="javascript:;" class="inactive">开始前必读</a>
                    <ul style="display: none">
                        <li><a href="javascript: void(0)" class="two" onclick="showAtRight('/Home/Standard')">开发说明</a></li>
                        <li><a href="javascript: void(0)" class="two" onclick="showAtRight('/Home/ReceiveData')">数据接收说明</a></li>
                        <li><a href="javascript: void(0)" class="two" onclick="showAtRight('/Home/TestResultDesc')" id="TestResultDesc">数据描述</a></li>
                        <li><a href="javascript: void(0)" class="two" onclick="showAtRight('/Home/UpdateLog')">更新日志</a></li>
                    </ul>
                </li>
                <li onClick="AddInterface('@ViewData["AccessID"]')"><a href="javascript: void(0)" class="inactive">申请接口</a></li>
                <li onclick="WaitAudit('@ViewData["AccessID"]')"><a href="javascript: void(0)" class="inactive">等待审核接口</a></li>
                <li>
                    @{ var num = 0;
                        if (ViewData["dic"] != null)
                        {
                            var dic = ViewData["dic"] as Dictionary<string, List<UserInterface>>;
                            num = dic.Count;
                        }
                    }
                    <a onclick="EnableInter('@ViewData["AccessID"]','@num','@ViewData["hasNotPass"]')" href="javascript:;" class="inactive">可用接口</a>
                    @if (num != 0)
                    {
                        <ul style="display: none;">
                            @foreach (var dic in ViewData["dic"] as Dictionary<string, List<UserInterface>>)
                            {

                                <li style="border-bottom:1px solid #bcbec1;">
                                    <a href="javascript:void(0)" class="erji active">@dic.Key</a>
                                    <ul>
                                        @foreach (UserInterface inter in dic.Value)
                                        {
                                            <li><a href="javascript:void(0)" onclick="showAtRight('/Home/@inter.Url')">@inter.CategoryName</a></li>
                                        }
                                    </ul>
                                </li>
                            }
                        </ul>
                    }
                </li>
            </ul>
        </div>
    </div>
    <div id="Content-right">
    </div>
    <div style="width:100%;height:80px;clear:both;"></div>
</body>
</html>
<script src="~/Scripts/jquery-3.1.0.min.js"></script>
<link href="~/Scripts/dialog/ui-dialog.css" rel="stylesheet" />
<script src="~/Scripts/dialog/dialog.js"></script>
<script src="~/Scripts/artDialog/artDialog.js?skin=blue"></script>
<script src='~/Scripts/artDialog/plugins/iframeTools.js' type="text/javascript"></script>
<script type="text/javascript">
    var d;
    function showDetailMsg(detailMsg,id) {

        $(function(){
            $("#"+id).css("color","#467ca2");
        })

        d = dialog({
            width: '20em',
            align: 'right',
            content: detailMsg,
        })
        d.show(document.getElementById(id));
    }
    function hideDetailMsg(id){
        $(function(){
            $("#"+id).css("color","black");
        })
        d.close().remove();
    }
    $(document).ready(function() {

        showAtRight('/Document/Main');

        $('.inactive').click(function () {

            if ($(this).siblings('ul').length == 0) {
                $(this).parent().siblings('li').css("background-color", "#eef3f6");
                $(this).parent().siblings('li').children('a').css("color", "#2d3132");

                $(this).parent().siblings('li').find('a').css("color","#2d3132");
                $(".erji.active").css("color","#bcbec1");

                $(this).parent().css("background-color", "#467ca2");
                $(this).css("color", "white");

            }

            if($(this).siblings('ul').css('display')=='none'){
                $(this).addClass('inactives');
                $(this).siblings('ul').slideDown(100).children('li');

            }else{
                $(this).removeClass('inactives');
                $(this).siblings('ul').slideUp(100);
            }
        })

        $('.two').click(function () {
            $(this).parent().parent().parent().siblings('li').css("background-color", "#eef3f6");
            $(this).parent().parent().parent().siblings('li').children('a').css("color", "#2d3132");

            $(this).parent().parent().parent().css("background-color", "#467ca2");
            $(this).parent().parent().parent().children('a').css("color", "white");
            $(this).parent().siblings('li').children('a').css("color", "#656363");
            $(this).parent().parent().parent().siblings().find('.erji.active').siblings('ul').find('a').css("color", "#656363");
            $(this).css("color", "blue");
        })

        $('.erji.active').siblings('ul').find('a').click(function () {
            //一级菜单 的兄弟菜单
            $(this).parent().parent().parent().parent().parent().siblings('li').css("background-color", "#eef3f6");
            $(this).parent().parent().parent().parent().parent().siblings('li').children('a').css("color", "#2d3132");

            $(this).parent().parent().parent().siblings('li').children('ul').find('a').css("color", "#656363");

            $(this).parent().parent().parent().parent().parent().css("background-color", "#467ca2");
            $(this).parent().parent().parent().parent().parent().children('a').css("color", "white");
            $(this).parent().siblings('li').children('a').css("color", "#656363");
            $(this).parent().parent().parent().parent().parent().siblings().find('.two').css("color", "#656363");
            $(this).css("color", "blue");
        })
    });

            function AddInterface(accessID) {
                if(accessID != ""){
                    showAtRight('/Interface/AddInterface');
                }else{

                    loginArt();

                }
            }
            function WaitAudit(accessID) {
                if(accessID != ""){
                   showAtRight('/Interface/WaitAuditInterface');
                }else{

                    loginArt();

                }
            }
            function EnableInter(accessID,num,hasNotPass){
                if(accessID == ""){

                    loginArt();

                }else{
                    if(num == 0 && hasNotPass == 0){

                        art.dialog({
                            lock: true,
                            drag:false,
                            background: '#000',
                            opacity: 0.6,
                            icon: 'question',
                            title:'提示',
                            content:'您还没有申请接口,要去申请接口吗？',
                            ok:function(){
                                showAtRight('/Interface/AddInterface');
                                return true;
                            },
                            cancelVal:'取消',
                            cancel:true
                        })

                    }else if(hasNotPass != 0 && num == 0){

                        artAlert('您选择的所有接口都未通过审核!');

                    }
                }
            }

            function loginArt(){
                art.dialog({
                    lock: true,
                    drag:false,
                    background: '#000',
                    opacity: 0.6,
                    icon: 'question',
                    title:'提示',
                    content:'请您先登录',
                    ok:function(){
                        window.location.href = '/User/Login';
                        return false;
                    },
                    cancelVal:'取消',
                    cancel:true
                })
            }

            // 警示框
            function artAlert(res) {
                art.dialog({
                    lock: true,
                    drag:false,
                    background: '#000',
                    opacity: 0.6,
                    icon: 'warning',
                    title:'提示',
                    content: res,
                    ok: function () {
                    },
                    cancel: false
                });
            }



            function showAtRight(url) {
                if(url == '/Home/TestResultDesc'){
                    $(function(){
                        $('#TestResultDesc').css("color","blue");
                        $('#TestResultDesc').parent().siblings('li').children('a').css("color","#2d3132");
                    })
                }
                var xmlHttp;

                if (window.XMLHttpRequest) {
                    // code for IE7+, Firefox, Chrome, Opera, Safari
                    xmlHttp = new XMLHttpRequest();    //创建 XMLHttpRequest对象
                }
                else {
                    // code for IE6, IE5
                    xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
                }

                xmlHttp.onreadystatechange = function () {
                    //onreadystatechange — 当readystate变化时调用后面的方法

                    if (xmlHttp.readyState == 4) {
                        //xmlHttp.readyState == 4    ——    finished downloading response

                        if (xmlHttp.status == 200) {
                            //xmlHttp.status == 200        ——    服务器反馈正常

                            document.getElementById("Content-right").innerHTML = xmlHttp.responseText;    //重设页面中id="Content-right"的div里的内容
                            executeScript(xmlHttp.responseText);    //执行从服务器返回的页面内容里包含的JavaScript函数
                        }
                            //错误状态处理
                        else if (xmlHttp.status == 404) {
                            alert("出错了☹   （错误代码：404 Not Found），……！");
                            /* 对404的处理 */
                            return;
                        }
                        else if (xmlHttp.status == 403) {
                            alert("出错了☹   （错误代码：403 Forbidden），……");
                            /* 对403的处理  */
                            return;
                        }
                        else {
                            alert("出错了☹   （错误代码：" + request.status + "），……");
                            /* 对出现了其他错误代码所示错误的处理   */
                            return;
                        }
                    }
                }

                //把请求发送到服务器上的指定文件（url指向的文件）进行处理
                xmlHttp.open("GET", url, true);        //true表示异步处理
                xmlHttp.send();
            }

            function executeScript(html)
            {

                var reg = /<script[^>]*>([^\x00]+)$/i;
                //对整段HTML片段按<\/script>拆分
                var htmlBlock = html.split("<\/script>");
                for (var i in htmlBlock)
                {
                    var blocks;//匹配正则表达式的内容数组，blocks[1]就是真正的一段脚本内容，因为前面reg定义我们用了括号进行了捕获分组
                    if (blocks = htmlBlock[i].match(reg))
                    {
                        //清除可能存在的注释标记，对于注释结尾-->可以忽略处理，eval一样能正常工作
                        var code = blocks[1].replace(/<!--/, '');
                        try
                        {
                            eval(code) //执行脚本
                        }
                        catch (e)
                        {
                        }
                    }
                }
            }
</script>